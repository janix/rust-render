---
name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: Release latest
          draft: false
          prerelease: false

  release_assets:
    name: Release assets
#    needs: create_release
    runs-on: ${{ matrix.config.os }} 
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
    env:
      ${{ if eq( matrix.config.os, 'windows-latest') }}:
        built_file: "target/release/rust-render.exe"
      ${{ else }}:
        built_file: 'target/release/rust-render'

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --release
    - name: Run tests
      run: cargo test --verbose
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_name: rust-render-${{ matrix.config.os }}
        asset_path: ${{ env.built_file }}
        asset_content_type: application/octet-stream
